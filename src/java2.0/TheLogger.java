// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏ –≤ –≤–∏–¥–µ
// –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—à–µ—Ç –º–∞—Å—Å–∏–≤, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–π –ø—Ä–µ–¥—ã–¥—É—â–∏–º
// –º–µ—Ç–æ–¥–æ–º –≤ —Ñ–∞–π–ª.
// üìå –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try-catch –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í —Å–ª—É—á–∞–µ
// –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–æ–≥-—Ñ–∞–π–ª.

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

public class TheLogger {
    private static Logger logger = Logger.getLogger(TheLogger.class.getName());

public static String[] contentFolder(String dirname) {
File folder = new File(dirname);

return folder.list();
}

public static void writeToFile(String[] str, String fileName) {
try (FileWriter fileWriter = new FileWriter(fileName)) {

for (int i = 0; i < str.length; i++) {
fileWriter.write(str[i]);
fileWriter.write(System.lineSeparator());
}
logger.info("–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–∞!");
} catch (IOException e) {
logger.log(Level.WARNING, "–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª!");
}

}

private static void setLogger() {
try {
FileHandler handler = new FileHandler("log.txt", true);
SimpleFormatter formatter = new SimpleFormatter();

logger.addHandler(handler);
handler.setFormatter(formatter);
} catch (SecurityException e) {
    e.printStackTrace();
} catch (IOException e) {
e.printStackTrace();
}
}

public static void main(String[] args) {
setLogger();

String[] nameFolder = contentFolder(".");
writeToFile(nameFolder, "index.txt");

}

}