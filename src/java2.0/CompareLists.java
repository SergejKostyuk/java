// üìå 1) –ó–∞–º–µ—Ä—å—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤ ArrayList –¥–æ–±–∞–≤—è—Ç—Å—è 10000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
// üìå 2) –ó–∞–º–µ—Ä—å—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤ LinkedList –¥–æ–±–∞–≤—è—Ç—Å—è 10000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
// –°—Ä–∞–≤–Ω–∏—Ç–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º.

import java.util.ArrayList;
import java.util.LinkedList;

public class CompareLists {
public static void main(String[] args) {
int count = 200_000;

System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞");
long start = System.currentTimeMillis();
addArrayListLast(count);
System.out.println("ArrayList: " + (System.currentTimeMillis() - start));

start = System.currentTimeMillis();
addLinkedListLast(count);
System.out.println("LinkedList: " + (System.currentTimeMillis() - start));

System.out.println();

System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞");
start = System.currentTimeMillis();
addArrayListFirst(count);
System.out.println("ArrayList: " + (System.currentTimeMillis() - start));

start = System.currentTimeMillis();
addLinkedListFirst(count);
System.out.println("LinkedList: " + (System.currentTimeMillis() - start));

System.out.println();

System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–µ—Ä–µ–¥–∏–Ω—É —Å–ø–∏—Å–∫–∞");
start = System.currentTimeMillis();
addArrayListMiddle(count);
System.out.println("ArrayList: " + (System.currentTimeMillis() - start));

start = System.currentTimeMillis();
addLinkedListMiddle(count);
System.out.println("LinkedList: " + (System.currentTimeMillis() - start));


}

public static ArrayList<Integer> addArrayListLast(int count) {
ArrayList<Integer> arrayList = new ArrayList<>();
for (int i = 0; i < count; i++) {
arrayList.addLast(i);
}
return arrayList;
}

public static LinkedList<Integer> addLinkedListLast(int count) {
LinkedList<Integer> linkedList = new LinkedList<>();
for (int i = 0; i < count; i++) {
linkedList.addLast(i);
}
return linkedList;
}

public static ArrayList<Integer> addArrayListFirst(int count) {
ArrayList<Integer> arrayList = new ArrayList<>();
for (int i = 0; i < count; i++) {
arrayList.addFirst(i);
}
return arrayList;
}

public static LinkedList<Integer> addLinkedListFirst(int count) {
LinkedList<Integer> linkedList = new LinkedList<>();
for (int i = 0; i < count; i++) {
linkedList.addFirst(i);
}
return linkedList;
}

public static ArrayList<Integer> addArrayListMiddle(int count) {
ArrayList<Integer> arrayList = new ArrayList<>();
for (int i = 0; i < count; i++) {
arrayList.add(arrayList.size()/2, i);
}
return arrayList;
}

public static LinkedList<Integer> addLinkedListMiddle(int count) {
LinkedList<Integer> linkedList = new LinkedList<>();
for (int i = 0; i < count; i++) {
linkedList.add(linkedList.size()/2, i);
}
return linkedList;
}
}